---
import type { AnchorLink } from '@/components/shared/AnchorNavigation.astro'
import EntryLayout from '@/layouts/EntryLayout.astro'
import type { PageStoryblok } from '@/types/storyblok'
import { getAnchor } from '@/utils/anchor'
import { storyblokEditable } from '@/utils/storyblok'
import type { AstroStoryblokPage } from '@/utils/storyblok/generateStaticPaths'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import clsx from 'clsx'
import type { StoryblokStory } from 'storyblok-generate-ts'
import SiteHeaderSticky from '../shared/SiteHeaderSticky.astro'

export type Props = {
  page?: AstroStoryblokPage
  story: StoryblokStory<PageStoryblok>
  blok: PageStoryblok
}

const { page, story, blok } = Astro.props

const firstBlocks = blok.body?.slice(0, 1) || []
const lastBlocks = blok.body?.slice(1) || []
const validAnchorFields =
  blok.body?.map((blok) => blok.anchor).filter(Boolean) ?? []

const anchors: AnchorLink[] = []
validAnchorFields.forEach((field) => {
  const a = getAnchor(field)
  if (!a) return
  if (a.id && a.href && a.label) {
    anchors.push(a)
  }
})
---

<EntryLayout page={page} story={story} {...storyblokEditable(blok)}>
  <main class={clsx()}>
    {firstBlocks.map((firstBlock) => <StoryblokComponent blok={firstBlock} />)}
    <SiteHeaderSticky
      anchors={anchors}
      showAnchorNavigation={blok.showAnchorNavigation}
    />
    {lastBlocks.map((latestBlock) => <StoryblokComponent blok={latestBlock} />)}
  </main>
</EntryLayout>
