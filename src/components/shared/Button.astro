---
import Icon from '@/components/shared/Icon.astro'
import { defineInk } from '@/utils/ink'
import { config } from './Button.ink'
import { ButtonArrow } from './ButtonArrow'

const presets = {
  'primary-dark': {
    variant: 'contained',
    color: 'spark',
  },
  'primary-light': {
    variant: 'contained',
    color: 'spark',
  },
  'secondary-dark': {
    variant: 'contained',
    color: 'white',
  },
  'secondary-light': {
    variant: 'contained',
    color: 'white',
  },
  'outline-dark': {
    variant: 'outlined',
    color: 'steel',
  },
  'outline-light': {
    variant: 'outlined',
    color: 'white',
  },
  'link-dark': {
    variant: 'link',
    color: 'spark',
    arrow: 'left',
  },
  'link-light': {
    variant: 'link',
    color: 'white',
    arrow: 'left',
  },
}

export type Color = 'DEFAULT' | 'spark' | 'white'

export type Variant = 'DEFAULT' | 'contained' | 'outlined'

export type Size = 'DEFAULT'

export type Preset = keyof typeof presets

export type Arrow = 'none' | 'left' | 'right'

export type Props = {
  as?: string
  class?: string
  label?: string
  variant?: Variant
  color?: Color
  size?: Size
  arrow?: Arrow
  preset?: Preset
}

const {
  as: Component = 'a',
  class: className,
  preset,
  label,
  ...props
} = Astro.props

const presetProps = presets[preset] || presets['link-dark']
const inkProps = {
  variant: Astro.props?.variant ?? presetProps.variant,
  color: Astro.props?.color ?? presetProps.color,
  size: Astro.props?.size ?? presetProps.size,
}
const arrow = Astro.props?.arrow || presetProps.arrow

const { ink, inkProp } = defineInk({
  config,
  ...inkProps,
})

const animateArrowLeft = arrow === 'left' && inkProp('showArrow')
const animateArrowRight = arrow === 'right' && inkProp('showArrow')
---

<Component
  class={ink(
    'root',
    animateArrowLeft &&
      'hovers:transition-transform hovers:hover:-translate-x-2',
    animateArrowRight &&
      'hovers:transition-transform hovers:hover:-translate-x-2',
    className,
  )}
  {...props}
>
  {arrow === 'left' && inkProp('showArrow') && <ButtonArrow />}
  <span
    class={ink(
      'label',
      'inline-block',
      animateArrowLeft &&
        '-ml-[1.25em] hovers:transition-transform hovers:group-hover:translate-x-4',
      animateArrowRight &&
        'hovers:transition-transform hovers:group-hover:-translate-x-4',
    )}
  >
    <slot>{label}</slot>
  </span>
  {arrow === 'right' && inkProp('showArrow') && <ButtonArrow />}
</Component>
