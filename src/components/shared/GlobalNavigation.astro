---
import { applyLinkAttrs } from '@/utils/link'
import clsx from 'clsx'
import Icon from './Icon.astro'
import { useSiteConfig } from '@/utils/useSiteConfig'
import { useTranslate } from '@/i18n/utils'

const t = useTranslate(Astro.url)
const { config } = await useSiteConfig({
  url: Astro.url,
})
---

<div
  x-data
  @keydown.window.escape="$store.ui.toggleNav(false)"
  x-show="$store.ui.navOpen"
  class="relative z-globalnav"
  aria-labelledby="modal-title"
  x-ref="dialog"
  aria-modal="true"
  x-cloak
>
  <div
    x-show="$store.ui.navOpen"
    x-transition:enter="ease-out duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="ease-in duration-200"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed inset-0 bg-velvet/90 backdrop-blur-lg transition-opacity"
  >
  </div>

  <div
    x-show="$store.ui.navOpen"
    x-transition:enter="ease-out duration-300"
    x-transition:enter-start="opacity-0 scale-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="ease-in duration-200"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0 scale-0"
    class="fixed left-0 top-0 z-100 transition"
  >
    <div class="flex h-header items-center justify-start px-5 md:px-15">
      <button
        type="button"
        class={clsx(
          'flex-center h-12 w-12',
          'hovers:transition hovers:hover:opacity-80',
        )}
        x-data
        x-on:click="$store.ui.toggleContact(false)"
        aria-label={t('nav.close_nav')}
      >
        <Icon name="close" class="h-6 w-6" />
      </button>
    </div>
  </div>

  <div class="fixed inset-0 z-10 w-screen overflow-y-auto">
    <div class="flex min-h-full justify-center p-5 text-center md:p-10">
      <div
        x-show="$store.ui.navOpen"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        x-description="Modal panel, show/hide based on modal state."
        class={clsx(
          'relative transform overflow-hidden border-white text-center text-white transition-all',
          'flex flex-col',
        )}
        @click.away="$store.ui.toggleNav(false)"
      >
        <nav class="flex flex-1 flex-col justify-center">
          {
            config.primaryNavigation &&
              config.primaryNavigation?.length > 0 && (
                <ul class="space-y-2 lg:space-y-6">
                  {config.primaryNavigation.map((item) => (
                    <li>
                      <a
                        {...applyLinkAttrs(item.link)}
                        class={clsx(
                          'group block py-2',
                          'text-30 leading-none md:text-46 lg:text-60',
                          'transition-colors',
                          'text-creme hovers:hover:text-white',
                          'hovers:transition hovers:hover:opacity-80',
                        )}
                      >
                        {item.label}
                      </a>
                    </li>
                  ))}
                </ul>
              )
          }
          <hr
            class="mx-auto my-5 h-1 w-32 rounded-full border-none bg-white md:my-8 lg:my-10"
          />
          {
            config.secondaryNavigation &&
              config.secondaryNavigation?.length > 0 && (
                <ul class="">
                  {config.secondaryNavigation.map((item) => (
                    <li>
                      <a
                        {...applyLinkAttrs(item.link)}
                        class={clsx(
                          'block py-3',
                          'md:text-28 text-18 leading-none lg:text-36',
                          'transition-colors',
                          'text-creme hovers:hover:text-white',
                          'hovers:transition hovers:hover:opacity-80',
                        )}
                      >
                        {item.label}
                      </a>
                    </li>
                  ))}
                </ul>
              )
          }
        </nav>
        <div class="mt-auto pt-5">
          <button type="button" class="" @click="$store.ui.toggleNav(false)">
            <Icon name="signet" class="h-12 w-12" />
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
